name: CD

on:
  release:
    types: [published]

permissions:
  id-token: write       # Required for AWS credentials
  # contents: write       # Required for checkout and pushing changes
  # pull-requests: write  # Required for creating PRs
jobs:
  # publish-docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         submodules: recursive
  #         path: yearn-v3-term-vault
  #     - name: Generate a token
  #       id: docs_token
  #       uses: actions/create-github-app-token@v1
  #       with:
  #         app-id: ${{ secrets.APP_ID }}
  #         private-key: ${{ secrets.APP_PRIVATE_KEY }}
  #         owner: term-finance
  #         repositories: term-finance-developer-docs
  #     - uses: actions/checkout@master
  #       with:
  #         token: ${{ steps.docs_token.outputs.token }}
  #         repository: term-finance/term-finance-developer-docs
  #         ref: main
  #         path: term-finance-developer-docs
  #     - uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly
  #     - run: forge install
  #       working-directory: yearn-v3-term-vault
  #     - run: forge doc
  #       working-directory: yearn-v3-term-vault
  #     - run: CREATE_PR=true ./publish-docs.sh
  #       working-directory: yearn-v3-term-vault
  #       env:
  #         GITHUB_TOKEN: ${{ steps.docs_token.outputs.token }}
  #         RELEASE_VERSION: ${{ github.event.release.name }}
  #         RELEASE_NAME: ${{ github.event.release.name }}
  #         RELEASE_BODY: ${{ github.event.release.body }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - run: forge --version
      - name: Build contracts
        run: forge build --sizes
      - run: ./build-package.sh ./package
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          role-session-name: yearn-v3-term-vault-github-workflow
          aws-region: ${{ secrets.AWS_REGION }}
      - run: aws s3 sync package/ s3://${{ secrets.S3_BUCKET }}/${{ github.event.release.name }}
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: abis
          path: abi/
